{"version":3,"file":"731.4b7187b4a9c50455963e.chunk.js","mappings":"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","sources":["webpack://art-book-app/./frontend/components/shared/StatisticsCharts.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  useTheme,\n} from '@mui/material';\nimport {\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  RadialBarChart,\n  RadialBar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst CustomTooltip = ({ active, payload, label, formatter = null }) => {\n  if (active && payload && payload.length) {\n    return (\n      <Paper sx={{ p: 1.5, minWidth: 120 }}>\n        <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\n          {label}\n        </Typography>\n        {payload.map((entry, index) => (\n          <Typography\n            key={index}\n            variant=\"body2\"\n            sx={{ color: entry.color, fontSize: '0.875rem' }}\n          >\n            {entry.name}: {formatter ? formatter(entry.value) : entry.value}\n          </Typography>\n        ))}\n      </Paper>\n    );\n  }\n  return null;\n};\n\nconst StatisticsCharts = ({\n  data = {},\n  title = 'Statistics Overview',\n  showAll = false,\n}) => {\n  const theme = useTheme();\n\n  // Default data structure\n  const defaultData = {\n    cycleProgress: [\n      { month: 'Jan', cycles: 42, target: 60 },\n      { month: 'Feb', cycles: 58, target: 60 },\n      { month: 'Mar', cycles: 45, target: 60 },\n      { month: 'Apr', cycles: 67, target: 60 },\n      { month: 'May', cycles: 73, target: 60 },\n      { month: 'Jun', cycles: 55, target: 60 },\n    ],\n    orderStatus: [\n      { name: 'Completed', value: 45, color: theme.palette.success.main },\n      { name: 'In Progress', value: 23, color: theme.palette.info.main },\n      { name: 'Pending', value: 12, color: theme.palette.warning.main },\n      { name: 'Cancelled', value: 5, color: theme.palette.error.main },\n    ],\n    dailyActivity: [\n      { day: 'Mon', cycles: 12, hours: 8.5 },\n      { day: 'Tue', cycles: 15, hours: 9.2 },\n      { day: 'Wed', cycles: 8, hours: 6.1 },\n      { day: 'Thu', cycles: 18, hours: 10.8 },\n      { day: 'Fri', cycles: 14, hours: 8.9 },\n      { day: 'Sat', cycles: 9, hours: 5.5 },\n      { day: 'Sun', cycles: 6, hours: 3.2 },\n    ],\n    clientProgress: [\n      { client: 'Client A', progress: 85 },\n      { client: 'Client B', progress: 62 },\n      { client: 'Client C', progress: 94 },\n      { client: 'Client D', progress: 38 },\n      { client: 'Client E', progress: 77 },\n    ],\n    monthlyRevenue: [\n      { month: 'Jan', revenue: 4200, orders: 8 },\n      { month: 'Feb', revenue: 3800, orders: 6 },\n      { month: 'Mar', revenue: 5500, orders: 11 },\n      { month: 'Apr', revenue: 6200, orders: 12 },\n      { month: 'May', revenue: 4900, orders: 9 },\n      { month: 'Jun', revenue: 7100, orders: 14 },\n    ],\n    ...data,\n  };\n\n  const formatCurrency = value => `$${value.toLocaleString()}`;\n  const formatPercent = value => `${value}%`;\n\n  return (\n    <Box>\n      <Typography\n        variant=\"h5\"\n        gutterBottom\n        sx={{\n          mb: { xs: 2, md: 3 },\n          fontSize: { xs: '1.25rem', sm: '1.5rem' },\n          fontWeight: 600,\n        }}\n      >\n        {title}\n      </Typography>\n\n      <Grid container spacing={{ xs: 2, md: 3 }}>\n        {/* Cycle Progress Chart */}\n        <Grid item xs={12} md={showAll ? 6 : 12}>\n          <Card>\n            <CardContent sx={{ p: { xs: 2, md: 3 } }}>\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                sx={{\n                  fontSize: { xs: '1rem', md: '1.25rem' },\n                  fontWeight: 600,\n                }}\n              >\n                Monthly Cycle Progress\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height={{ xs: 250, md: 300 }}>\n                <LineChart data={defaultData.cycleProgress}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"month\" />\n                  <YAxis />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Legend />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"cycles\"\n                    stroke={theme.palette.primary.main}\n                    strokeWidth={3}\n                    dot={{ fill: theme.palette.primary.main, r: 6 }}\n                    activeDot={{ r: 8 }}\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"target\"\n                    stroke={theme.palette.secondary.main}\n                    strokeDasharray=\"5 5\"\n                    strokeWidth={2}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Order Status Pie Chart */}\n        <Grid item xs={12} md={showAll ? 6 : 6}>\n          <Card>\n            <CardContent sx={{ p: { xs: 2, md: 3 } }}>\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                sx={{\n                  fontSize: { xs: '1rem', md: '1.25rem' },\n                  fontWeight: 600,\n                }}\n              >\n                Order Status Distribution\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height={{ xs: 250, md: 300 }}>\n                <PieChart>\n                  <Pie\n                    data={defaultData.orderStatus}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    innerRadius={60}\n                    outerRadius={100}\n                    paddingAngle={2}\n                    dataKey=\"value\"\n                    label={({ name, percent }) =>\n                      `${name} ${(percent * 100).toFixed(0)}%`\n                    }\n                  >\n                    {defaultData.orderStatus.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={<CustomTooltip />} />\n                </PieChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Daily Activity */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Weekly Activity Overview\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <AreaChart data={defaultData.dailyActivity}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"day\" />\n                  <YAxis />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"cycles\"\n                    stackId=\"1\"\n                    stroke={theme.palette.primary.main}\n                    fill={theme.palette.primary.main}\n                    fillOpacity={0.6}\n                  />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"hours\"\n                    stackId=\"2\"\n                    stroke={theme.palette.secondary.main}\n                    fill={theme.palette.secondary.main}\n                    fillOpacity={0.6}\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Client Progress */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Client Project Progress\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <RadialBarChart\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius=\"10%\"\n                  outerRadius=\"90%\"\n                  barSize={20}\n                  data={defaultData.clientProgress}\n                >\n                  <RadialBar\n                    minAngle={15}\n                    label={{ position: 'insideStart', fill: '#fff' }}\n                    background\n                    clockWise\n                    dataKey=\"progress\"\n                    fill={theme.palette.success.main}\n                  />\n                  <Tooltip\n                    content={<CustomTooltip formatter={formatPercent} />}\n                  />\n                </RadialBarChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {showAll && (\n          <>\n            {/* Monthly Revenue */}\n            <Grid item xs={12} md={6}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Monthly Revenue & Orders\n                  </Typography>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <BarChart data={defaultData.monthlyRevenue}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"month\" />\n                      <YAxis />\n                      <Tooltip\n                        content={<CustomTooltip formatter={formatCurrency} />}\n                      />\n                      <Legend />\n                      <Bar\n                        dataKey=\"revenue\"\n                        fill={theme.palette.primary.main}\n                        radius={[4, 4, 0, 0]}\n                      />\n                      <Bar\n                        dataKey=\"orders\"\n                        fill={theme.palette.secondary.main}\n                        radius={[4, 4, 0, 0]}\n                      />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </CardContent>\n              </Card>\n            </Grid>\n\n            {/* Performance Metrics */}\n            <Grid item xs={12} md={6}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Performance Metrics\n                  </Typography>\n                  <Box\n                    sx={{\n                      height: 300,\n                      display: 'flex',\n                      flexDirection: 'column',\n                      gap: 2,\n                      pt: 2,\n                    }}\n                  >\n                    {[\n                      {\n                        label: 'Productivity Score',\n                        value: 87,\n                        color: theme.palette.success.main,\n                      },\n                      {\n                        label: 'Client Satisfaction',\n                        value: 94,\n                        color: theme.palette.info.main,\n                      },\n                      {\n                        label: 'Project Completion',\n                        value: 78,\n                        color: theme.palette.warning.main,\n                      },\n                      {\n                        label: 'Quality Rating',\n                        value: 92,\n                        color: theme.palette.primary.main,\n                      },\n                    ].map((metric, index) => (\n                      <Box key={index} sx={{ flex: 1 }}>\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"space-between\"\n                          alignItems=\"center\"\n                          mb={0.5}\n                        >\n                          <Typography variant=\"body2\">\n                            {metric.label}\n                          </Typography>\n                          <Typography variant=\"body2\" fontWeight=\"bold\">\n                            {metric.value}%\n                          </Typography>\n                        </Box>\n                        <Box\n                          sx={{\n                            width: '100%',\n                            height: 8,\n                            backgroundColor: 'grey.200',\n                            borderRadius: 1,\n                            overflow: 'hidden',\n                          }}\n                        >\n                          <Box\n                            sx={{\n                              width: `${metric.value}%`,\n                              height: '100%',\n                              backgroundColor: metric.color,\n                              borderRadius: 1,\n                              transition: 'width 1s ease-in-out',\n                            }}\n                          />\n                        </Box>\n                      </Box>\n                    ))}\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default StatisticsCharts;\n"],"names":["CustomTooltip","_ref","active","payload","label","_ref$formatter","formatter","length","React","Paper","sx","p","minWidth","Typography","variant","mb","map","entry","index","key","color","fontSize","name","value","_ref2","_ref2$data","data","_ref2$title","title","_ref2$showAll","showAll","theme","useTheme","defaultData","_objectSpread","cycleProgress","month","cycles","target","orderStatus","palette","success","main","info","warning","error","dailyActivity","day","hours","clientProgress","client","progress","monthlyRevenue","revenue","orders","Box","gutterBottom","xs","md","sm","fontWeight","Grid","container","spacing","item","Card","CardContent","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","content","Legend","Line","type","stroke","primary","strokeWidth","dot","fill","r","activeDot","secondary","PieChart","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","_ref3","percent","concat","toFixed","Cell","AreaChart","Area","stackId","fillOpacity","RadialBarChart","barSize","RadialBar","minAngle","position","background","clockWise","BarChart","toLocaleString","Bar","radius","display","flexDirection","gap","pt","metric","flex","justifyContent","alignItems","backgroundColor","borderRadius","overflow","transition"],"sourceRoot":""}