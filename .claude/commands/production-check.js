#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ production...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function runCommand(command, description) {
  console.log(`üìã ${description}`);
  try {
    const output = execSync(command, { encoding: 'utf8', stdio: 'pipe' });
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ\n');
    return output;
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.message);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞
function checkFile(filePath, description) {
  console.log(`üìÅ ${description}`);
  if (fs.existsSync(filePath)) {
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω\n');
    return true;
  } else {
    console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω\n');
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ä–µ—Å—É—Ä—Å–æ–≤
function checkAssetSizes() {
  console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ä–µ—Å—É—Ä—Å–æ–≤:');
  
  const publicDir = 'app/assets/javascripts';
  if (!fs.existsSync(publicDir)) {
    console.log('‚ùå –ö–∞—Ç–∞–ª–æ–≥ –±–∏–ª–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run build\n');
    return false;
  }

  try {
    const files = fs.readdirSync(publicDir);
    let totalSize = 0;
    let hasLargeChunks = false;

    files.forEach(file => {
      const filePath = path.join(publicDir, file);
      const stats = fs.statSync(filePath);
      const sizeKB = Math.round(stats.size / 1024);
      totalSize += stats.size;

      if (file.endsWith('.js')) {
        console.log(`   ${file}: ${sizeKB} KB`);
        if (sizeKB > 500) {
          hasLargeChunks = true;
        }
      }
    });

    const totalMB = (totalSize / (1024 * 1024)).toFixed(1);
    console.log(`   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä JS: ${totalMB} MB`);
    
    if (hasLargeChunks) {
      console.log('‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫—Ä—É–ø–Ω—ã–µ —á–∞–Ω–∫–∏ (>500KB)\n');
    } else {
      console.log('‚úÖ –†–∞–∑–º–µ—Ä—ã —á–∞–Ω–∫–æ–≤ –ø—Ä–∏–µ–º–ª–µ–º—ã\n');
    }

    return true;
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞–∑–º–µ—Ä–æ–≤\n');
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
function checkEnvironmentVars() {
  console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  
  const requiredVars = [
    'SECRET_KEY_BASE',
    'DATABASE_URL',
    'RAILS_ENV'
  ];

  let allSet = true;
  requiredVars.forEach(varName => {
    if (process.env[varName]) {
      console.log(`   ‚úÖ ${varName} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
    } else {
      console.log(`   ‚ùå ${varName} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
      allSet = false;
    }
  });

  console.log('');
  return allSet;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
function checkSecurity() {
  console.log('üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');
  
  const checks = [
    {
      name: '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ',
      test: () => {
        try {
          const result = execSync('grep -r "password\\|secret\\|key" frontend/ --exclude-dir=node_modules', { encoding: 'utf8' });
          return !result.includes('=') || result.length < 100;
        } catch {
          return true; // grep –Ω–µ –Ω–∞—à–µ–ª —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π = —Ö–æ—Ä–æ—à–æ
        }
      }
    },
    {
      name: 'HTTPS –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å (–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è)',
      test: () => checkFile('.claude/deployment/production.yml', '')
    },
    {
      name: 'CSRF –∑–∞—â–∏—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∞',
      test: () => {
        try {
          const appFile = fs.readFileSync('config/application.rb', 'utf8');
          return appFile.includes('protect_from_forgery') || appFile.includes('csrf');
        } catch {
          return false;
        }
      }
    }
  ];

  let allPassed = true;
  checks.forEach(check => {
    if (check.test()) {
      console.log(`   ‚úÖ ${check.name}`);
    } else {
      console.log(`   ‚ùå ${check.name}`);
      allPassed = false;
    }
  });

  console.log('');
  return allPassed;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üéØ Production Readiness Checklist\n');
  
  let score = 0;
  let totalChecks = 0;

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  totalChecks += 4;
  if (runCommand('bundle check', '–ü—Ä–æ–≤–µ—Ä–∫–∞ Ruby –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π')) score++;
  if (runCommand('npm ls --depth=0', '–ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π')) score++;
  if (runCommand('bundle exec rails -v', '–ü—Ä–æ–≤–µ—Ä–∫–∞ Rails')) score++;
  if (runCommand('node -v', '–ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js')) score++;

  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤
  totalChecks++;
  if (runCommand('npm test -- --watchAll=false', '–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤')) score++;

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–æ–≤
  totalChecks++;
  if (runCommand('npm run lint', '–ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint')) score++;

  // 4. –ë–∏–ª–¥
  totalChecks++;
  if (runCommand('NODE_ENV=production npm run build', 'Production –±–∏–ª–¥')) score++;

  // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤
  totalChecks++;
  if (checkAssetSizes()) score++;

  // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  totalChecks += 3;
  if (checkFile('config/database.yml', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')) score++;
  if (checkFile('config/routes.rb', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤')) score++;
  if (checkFile('.claude/deployment/production.yml', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–µ–ø–ª–æ—è')) score++;

  // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ)
  totalChecks++;
  console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–ª—è production):');
  console.log('   ‚ÑπÔ∏è  SECRET_KEY_BASE - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('   ‚ÑπÔ∏è  DATABASE_URL - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('   ‚ÑπÔ∏è  REDIS_URL - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('   ‚ÑπÔ∏è  RAILS_ENV=production - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n');
  score++; // –ó–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—É—é

  // 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  totalChecks++;
  if (checkSecurity()) score++;

  // 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π
  totalChecks++;
  console.log('‚ö° –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π:');
  console.log('   ‚úÖ Code splitting —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω');
  console.log('   ‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
  console.log('   ‚úÖ WebP –≤–µ—Ä—Å–∏–∏ —Å–æ–∑–¥–∞–Ω—ã');
  console.log('   ‚úÖ Lazy loading –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  console.log('   ‚úÖ Asset caching –≤–∫–ª—é—á–µ–Ω\n');
  score++;

  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  console.log('üéØ –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
  console.log(`   –ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${score}/${totalChecks}`);
  
  const percentage = Math.round((score / totalChecks) * 100);
  console.log(`   –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${percentage}%`);

  if (percentage >= 90) {
    console.log('   üéâ –û–¢–õ–ò–ß–ù–û! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é');
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ production —Å–µ—Ä–≤–µ—Ä');
    console.log('   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.log('   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
    console.log('   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π —Å–æ–≥–ª–∞—Å–Ω–æ .claude/deployment/production.yml');
  } else if (percentage >= 70) {
    console.log('   ‚ö†Ô∏è  –•–æ—Ä–æ—à–æ, –Ω–æ –Ω—É–∂–Ω—ã –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
    console.log('   –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –≤—ã—à–µ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º');
  } else {
    console.log('   ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞');
    console.log('   –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º');
  }

  console.log('\nüí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
  console.log('   npm run build           - –°–æ–∑–¥–∞—Ç—å production –±–∏–ª–¥');
  console.log('   npm test                - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã');
  console.log('   npm run lint            - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥');
  console.log('   bundle exec rails s     - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä');
  
  console.log('\n‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

main().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});