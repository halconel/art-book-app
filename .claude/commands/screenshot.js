#!/usr/bin/env node

/**
 * Claude Code Custom Command: screenshot
 * –°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ tmp –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
const tmpDir = path.join(process.cwd(), 'tmp');
if (!fs.existsSync(tmpDir)) {
  fs.mkdirSync(tmpDir, { recursive: true });
}

(async () => {
  const browser = await puppeteer.launch();
  const page = await browser.newPage();

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
  await page.setViewport({ width: 1920, height: 1080 });

  try {
    console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.goto('http://localhost:3001/', { waitUntil: 'networkidle2' });

    // –ñ–¥–µ–º, –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    await new Promise(resolve => setTimeout(resolve, 3000));

    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
    const timestamp = new Date()
      .toISOString()
      .replace(/[:.]/g, '-')
      .slice(0, -5);
    const filename = `homepage-${timestamp}.png`;
    const filepath = path.join(tmpDir, filename);

    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({
      path: filepath,
      fullPage: true,
    });

    console.log(`‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${filepath}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:', error);
    process.exit(1);
  } finally {
    await browser.close();
  }
})();
