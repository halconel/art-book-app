#!/usr/bin/env node

/**
 * Claude Code Custom Command: screenshot-admin
 * –°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ tmp –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
const tmpDir = path.join(process.cwd(), 'tmp');
if (!fs.existsSync(tmpDir)) {
  fs.mkdirSync(tmpDir, { recursive: true });
}

(async () => {
  const browser = await puppeteer.launch();
  const page = await browser.newPage();

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
  await page.setViewport({ width: 1920, height: 1080 });

  try {
    console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏...');

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø—Ä—è–º–æ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å React SPA
    await page.goto('http://127.0.0.1:3000/#/admin', { waitUntil: 'networkidle2' });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    await new Promise(resolve => setTimeout(resolve, 3000));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –µ—ë
    const loginExists = await page.$('input[type="email"], input[name="email"]');
    if (loginExists) {
      console.log('üîë –ù–∞–π–¥–µ–Ω–∞ —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞, –∑–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞...');
      
      await page.type('input[type="email"], input[name="email"]', 'admin@example.com');
      await page.type('input[type="password"], input[name="password"]', 'password123');
      
      // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞ –∏ –∫–ª–∏–∫–∞–µ–º
      const loginButton = await page.$('button[type="submit"], input[type="submit"]');
      if (loginButton) {
        await loginButton.click();
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
        await new Promise(resolve => setTimeout(resolve, 3000));
      }
    }
    
    // –ñ–¥–µ–º, –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
    await new Promise(resolve => setTimeout(resolve, 5000));

    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
    const timestamp = new Date()
      .toISOString()
      .replace(/[:.]/g, '-')
      .slice(0, -5);
    const filename = `admin-dashboard-${timestamp}.png`;
    const filepath = path.join(tmpDir, filename);

    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({
      path: filepath,
      fullPage: true,
    });

    console.log(`‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${filepath}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏:', error);
    
    // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const timestamp = new Date()
      .toISOString()
      .replace(/[:.]/g, '-')
      .slice(0, -5);
    const debugFilename = `admin-debug-${timestamp}.png`;
    const debugFilepath = path.join(tmpDir, debugFilename);
    
    await page.screenshot({
      path: debugFilepath,
      fullPage: true,
    });
    
    console.log(`üîç –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${debugFilepath}`);
    process.exit(1);
  } finally {
    await browser.close();
  }
})();