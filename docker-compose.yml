version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: artbook_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: beyond_home_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - artbook_network

  # Rails Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: app
    container_name: artbook_app_dev
    restart: unless-stopped
    environment:
      # Rails environment
      RAILS_ENV: development
      NODE_ENV: development
      
      # Database configuration
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: beyond_home_development
      
      # Rails configuration
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY:-dummy_key_for_development}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-development_secret_key_base_that_is_long_enough}
      
      # JWT configuration
      JWT_SECRET: ${JWT_SECRET:-development_jwt_secret_key_for_local_development}
      
      # Application configuration
      SEED_DB: "true"
      RAILS_LOG_TO_STDOUT: "true"
      RAILS_SERVE_STATIC_FILES: "true"
      
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for development (hot reload)
      - .:/app:cached
      - bundle_cache:/usr/local/bundle
      - node_modules:/app/node_modules
      - rails_cache:/app/tmp/cache
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "entrypoint.sh", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - artbook_network
    stdin_open: true
    tty: true

volumes:
  # PostgreSQL data persistence
  postgres_data:
    driver: local
  
  # Gem cache for faster rebuilds
  bundle_cache:
    driver: local
    
  # Node modules cache
  node_modules:
    driver: local
    
  # Rails cache
  rails_cache:
    driver: local

networks:
  artbook_network:
    driver: bridge